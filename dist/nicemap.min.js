"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var dd,NicemapGeoJson=/*#__PURE__*/function(){function a(b){if(_classCallCheck(this,a),b=b||{},!b.url)throw"Missing parameter 'url'";this.url=b.url,this.countryName=b.countryName||"MAPLAB",this.countryCode=b.countryCode||"ISO3CD"}return _createClass(a,[{key:"fetch",value:function(a){function b(){return a.apply(this,arguments)}return b.toString=function(){return a.toString()},b}(function(){if(void 0===this.result){console.log("fetching "+this.url);var a=this;this.result=fetch(this.url).then(function(a){return a.json()}).then(function(b){return a._processResult(b)})["catch"](function(b){return console.error(b),a.result=Promise.resolve(null)})}return this.result})},{key:"_processResult",value:function _processResult(a){if(dd=a,"object"!=_typeof(a)||"FeatureCollection"!=a.type)throw"Invalid map data : "+this.url;var b=this;return a.features=a.features.filter(function(a){return"ATA"!=a.properties.ISO3CD}),a.features.forEach(function(a){a._nicemapCountryName=a.properties[b.countryName],a._nicemapCountryCode=a.properties[b.countryCode]}),this.result=Promise.resolve(a),this.result}}]),a}(),Nicemap=/*#__PURE__*/function(){// options:
//    containerId (mandatory) : identifier of the container
//    data : [[countryid1, value1], [countryid2, value2], ....]
//    colorScale : 
//    mapData : a NicemapGeoJson instance
function a(b){if(_classCallCheck(this,a),b=b||{},!b.containerId)throw"Missing parameter 'containerId'";var c=this.containerId=b.containerId,d=this.container=d3.select("#"+c).node();if(null==d)throw c+": container not found";if(this.colorScaleArg=b.colorScale||["white","black"],Array.isArray(this.colorScaleArg)&&2==this.colorScaleArg.length);else if("function"==typeof this.colorScaleArg);else throw"color scale must be an array of two colors or a function that return a d3 color scale";if(!(b.mapData instanceof NicemapGeoJson))throw"mapData must be an instance of NicemapGeoJson";// zoom
var e=this.zoom=d3.zoom().scaleExtent([1,30]).on("zoom",function(){f.attr("transform",d3.event.transform)});// main svg 
this.svg=d3.select(d).append("svg").attr("class","nicemap-svg").call(e).on("dblclick.zoom",null);var f=this.mapG=this.svg.append("g");this.projection=d3.geoMercator(),this.boundaryColor="#bbb",this.processData(b.data),this.createLegend(),this.createTooltip(),this.createZoomButtons();var g=this;b.mapData.fetch().then(function(a){return g.worldMap=a}).then(function(){return g.redraw()}),window.addEventListener("resize",function(){return g.redraw()})}return _createClass(a,[{key:"redraw",value:function redraw(){var a=Math.PI,b=this.container,c=b.clientWidth,d=b.clientHeight,e=this.projection;e.scale(c/(2*a)).translate([.5*c,.5*d+.25*(.5*c)]),this.svg.attr("width",c).attr("height",d);var f=d3.geoPath().projection(e),h=this.mapG,g=this.worldMap.features,i=this,j=h.selectAll("path").data(g);j.exit().remove(),j.enter().append("path").style("stroke",i.boundaryColor).style("vector-effect","non-scaling-stroke").merge(j).attr("d",f).style("fill",function(a){return i.getValueColor(a._nicemapCountryCode)})// handle tooltip
.on("mouseover",function(a){this.parentNode.appendChild(this),d3.select(this).style("stroke","black"),i.showTooltip(a)}).on("mousemove",function(a){i.showTooltip(a)}).on("mouseout",function(){d3.select(this).style("stroke",i.boundaryColor),i.hideToolTip()});this.legend.attr("visibility","visible").attr("transform","translate(10, "+(d-40)+")"),this.zoom.translateExtent([[0,0],[c,d]]).extent([[0,0],[c,d]])}// compute value range and build the color scale
},{key:"processData",value:function processData(a){var b=this.valueTable={};a?(a.forEach(function(a){return b[a[0]]=a[1]}),this.valueRange=d3.extent(a.map(function(a){return a[1]}))):this.valueRange=[0,1],Array.isArray(this.colorScaleArg)?this.colorScale=d3.scaleLinear().range(this.colorScaleArg).domain(this.valueRange):"function"==typeof this.colorScaleArg&&(this.colorScale=this.colorScaleArg(this.valueRange))}// return a color for a given country code
},{key:"getValueColor",value:function getValueColor(a){var b=this.valueTable[a];return void 0===b?"#eee":this.colorScale(b)}// create a tooltip (see .css file for look&feel)
},{key:"createTooltip",value:function createTooltip(){this.tooltip=d3.select("body").append("div").attr("class","nicemap-tooltip").style("position","absolute").style("z-index","10").style("visibility","hidden"),this.tooltip.append("div").attr("class","tooltip-text")}// visualize & hide the tooltip
},{key:"showTooltip",value:function showTooltip(a){var b=a._nicemapCountryCode,c=a._nicemapCountryName,d=this.valueTable[b];void 0===d&&(d="no value");var e="<strong>"+c+"</strong><br>Value = "+d;this.tooltip.style("visibility","visible").style("top",d3.event.pageY+10+"px").style("left",d3.event.pageX+10+"px"),this.tooltip.select(".tooltip-text").html(e)}},{key:"hideToolTip",value:function hideToolTip(){this.tooltip.style("visibility","hidden")}},{key:"createLegend",value:function createLegend(){var a=this,b=this.legend=this.svg.append("g");b.attr("visibility","hidden");var c=this.containerId+"-gradient",d=b.append("defs").append("svg:linearGradient").attr("id",c).attr("x1","0%").attr("y1","100%").attr("x2","100%").attr("y2","100%").attr("spreadMethod","pad");[0,10,20,30,40,50,60,70,80,90,100].forEach(function(b){var c=a.valueRange[0]+.01*((a.valueRange[1]-a.valueRange[0])*b);d.append("stop").attr("offset",b+"%").attr("stop-color",a.colorScale(c)).attr("stop-opacity",1)}),b.append("rect").attr("width",120).attr("height",10).style("fill","url(#"+c+")").attr("transform","translate(0,10)");var e=d3.scaleLinear().range([0,120]).domain(this.valueRange),f=d3.axisBottom().scale(e).ticks(5);b.append("g").attr("class","y axis").attr("transform","translate(0,20)").call(f)}},{key:"createZoomButtons",value:function createZoomButtons(){// const y0 = this.container.clientHeight - 30;
var a=this,b=this.svg.selectAll("g.buttons").data(["+","-"]).enter().append("g").attr("class","nicemap-buttons").attr("transform",function(a,b){return"translate(20,"+(10+17*b)+")"});b.append("circle").attr("r",8).on("click",function(b){d3.event.stopPropagation(),a.svg.transition().call(a.zoom.scaleBy,"+"==b?2:.5)}),b.append("text").text(function(a){return a}).style("font-size","10px").style("text-anchor","middle").style("alignment-baseline","central")}}]),a}();

